<?php

namespace StudentAssignmentScheduler\Notification;

use PHPMailer\PHPMailer\PHPMailer;

class MailSender
{
    const DEFAULT_EMAIL_SUBJECT = "Student Assignment";
    const DEFAULT_PORT = 587;

    /**
     * @var PHPMailer $mailer
     */
    protected $mailer;

    /**
     * @var string $from_email
     */
    protected $from_email;

    /**
     * @param PHPMailer $mailer
     * @param string $from_email
     * @param string $password
     * @param string $host
     */
    public function __construct(PHPMailer $mailer, string $from_email, string $password, string $host)
    {
        $this->mailer = $this->mailerConfigured(
            $mailer,
            $from_email,
            $password,
            $host
        );
        $this->from_email = $from_email;
    }

    /**
     * @param PHPMailer $mailer_before_configuring
     * @param string $from_email
     * @param string $password
     * @param string $host
     * @return PHPMailer
     */
    private function mailerConfigured(
        PHPMailer $mailer_before_configuring,
        string $from_email,
        string $password,
        string $host
    ): PHPMailer {
        $mailer = clone $mailer_before_configuring;
        $mailer->isSMTP();
        $mailer->Host = $host;
        $mailer->SMTPAuth = true;
        $mailer->Username = $from_email;
        $mailer->Password = $password;
        $mailer->SMTPSecure = "tls";
        $mailer->Port = self::DEFAULT_PORT;
        $mailer->setFrom($from_email);
        $mailer->Subject = self::DEFAULT_EMAIL_SUBJECT;
        
        return $mailer;
    }

    public function __clone()
    {
        $this->mailer = clone $this->mailer;
    }

    /**
     * @param string $email
     * @param string $fullname
     */
    public function withRecipient(string $email, string $fullname = "")
    {
        $copy = clone $this;
        $copy->resetRecipients();
        $copy->mailer->addAddress($email, $fullname);
        return $copy;
    }

    private function resetRecipients()
    {
        $this->mailer->clearAllRecipients();
    }

    /**
     * @return self
     */
    public function setEmailToUser(): self
    {
        $copy = clone $this;
        $copy->mailer->addAddress($copy->from_email);
        return $copy;
    }

    /**
     * @param string $email
     * @param string $fullname
     * @return self
     */
    public function addAddress(string $email, string $fullname = ""): self
    {
        $copy = clone $this;
        $copy->mailer->addAddress($email, $fullname);
        return $copy;
    }

    /**
     * @param string $path
     * @return self
     */
    public function addAttachment(string $path): self
    {
        $copy = clone $this;
        $copy->mailer->addAttachment($path);
        return $copy;
    }

    /**
     * @param string $subject
     * @return self
     */
    public function addSubject(string $subject): self
    {
        $copy = clone $this;
        $copy->mailer->Subject = $subject;
        return $copy;
    }

    /**
     * @param string $body
     * @return self
     */
    public function addBody(string $body): self
    {
        $copy = clone $this;
        $copy->mailer->Body = $body;
        return $copy;
    }

    /**
     * @return self
     */
    public function send(): self
    {
        $copy = clone $this;
        $copy->mailer->send();
        return $copy;
    }

    /**
     * @param PHPMailer $Mailer
     * @return self
     */
    public function withMailer(PHPMailer $Mailer): self
    {
        $copy = clone $this;
        $copy->mailer = $Mailer;
        return $copy;
    }
}

